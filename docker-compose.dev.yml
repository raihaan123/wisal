version: '3.8'

# Development override configuration
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # MongoDB with volume mount for data persistence
  mongodb:
    ports:
      - "27017:27017"
    volumes:
      - ./wisal/data/mongodb:/data/db

  # Elasticsearch with development settings
  elasticsearch:
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  # Lower memory for dev
      - xpack.security.enabled=false
      - logger.level=DEBUG
    volumes:
      - ./wisal/data/elasticsearch:/usr/share/elasticsearch/data

  # Redis with custom configuration
  redis:
    volumes:
      - ./wisal/data/redis:/data

  # Backend with hot reload
  backend:
    build:
      context: ./wisal/backend
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DEBUG: wisal:*
    volumes:
      - ./wisal/backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend with hot reload
  frontend:
    build:
      context: ./wisal/frontend
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
    volumes:
      - ./wisal/frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: wisal-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD:-changeme}
    depends_on:
      - mongodb
    networks:
      - wisal-network

  # Kibana for Elasticsearch visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: wisal-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      xpack.security.enabled: false
    depends_on:
      - elasticsearch
    networks:
      - wisal-network

  # RedisInsight for Redis management
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: wisal-redisinsight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./wisal/data/redisinsight:/db
    networks:
      - wisal-network

volumes:
  # Define data volumes for development
  mongodb_data:
    driver: local
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local